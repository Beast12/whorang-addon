---
name: Version Management and Auto-Tagging

# FIXED: Only trigger on manual dispatch - eliminates circular dependencies
on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version increment type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      create_tag:
        description: 'Create tag after version update'
        required: true
        default: true
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  update-version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
      version_tag: ${{ steps.version.outputs.version_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Calculate new version
        id: version
        run: |
          # Get current version from config.yaml
          CURRENT_VERSION=$(grep '^version:' whorang/config.yaml | sed 's/version: *"\(.*\)"/\1/')
          echo "Current version: $CURRENT_VERSION"
          
          # Remove 'v' prefix if present and split version
          CLEAN_VERSION=${CURRENT_VERSION#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CLEAN_VERSION"
          
          # FIXED: Use workflow input instead of complex detection
          case "${{ github.event.inputs.version_type }}" in
            major)
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
              ;;
            minor)
              MINOR=$((MINOR + 1))
              PATCH=0
              ;;
            patch)
              PATCH=$((PATCH + 1))
              ;;
          esac
          
          # Create new version
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          VERSION_TAG="v$NEW_VERSION"
          
          echo "New version: $NEW_VERSION"
          echo "Version tag: $VERSION_TAG"
          
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "version_tag=$VERSION_TAG" >> $GITHUB_OUTPUT

      - name: Update version in all config files
        run: |
          NEW_VERSION="${{ steps.version.outputs.new_version }}"
          
          # Update whorang/config.yaml
          sed -i "s/^version: .*/version: \"$NEW_VERSION\"/" whorang/config.yaml
          
          # Update whorang/package.json
          sed -i "s/\"version\": \".*\"/\"version\": \"$NEW_VERSION\"/" whorang/package.json
          
          # Update custom_components/whorang/manifest.json
          sed -i "s/\"version\": \".*\"/\"version\": \"$NEW_VERSION\"/" custom_components/whorang/manifest.json
          
          # Verify the changes
          echo "Updated versions:"
          grep "^version:" whorang/config.yaml
          grep "\"version\":" whorang/package.json
          grep "\"version\":" custom_components/whorang/manifest.json

      - name: Commit version update
        run: |
          git add whorang/config.yaml whorang/package.json custom_components/whorang/manifest.json
          git commit -m "chore: bump version to ${{ steps.version.outputs.new_version }}"
          git push origin main

  create-tag:
    runs-on: ubuntu-latest
    needs: update-version
    if: github.event.inputs.create_tag == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull latest changes and create tag
        run: |
          VERSION_TAG="${{ needs.update-version.outputs.version_tag }}"
          NEW_VERSION="${{ needs.update-version.outputs.new_version }}"
          
          # Pull latest changes (including version bump commit)
          git pull origin main
          
          # Create annotated tag
          git tag -a "$VERSION_TAG" -m "Release $VERSION_TAG

          üöÄ WhoRang AI Doorbell $VERSION_TAG
          
          This release includes:
          - Security fixes and improvements
          - Enhanced Home Assistant integration
          - Multi-provider AI analysis support
          - Advanced face recognition capabilities
          
          Auto-generated release on $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          
          # Push tag (this will trigger docker-build.yml)
          git push origin "$VERSION_TAG"
          
          echo "‚úÖ Created and pushed tag: $VERSION_TAG"
          echo "üê≥ Docker build will be triggered automatically"

      - name: Create GitHub Release
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const tag = '${{ needs.update-version.outputs.version_tag }}';
            const version = '${{ needs.update-version.outputs.new_version }}';
            
            // Get recent commits for changelog
            const commits = await github.rest.repos.listCommits({
              owner,
              repo,
              sha: 'main',
              per_page: 20
            });
            
            const changelog = commits.data
              .slice(0, 10)
              .map(commit => `- ${commit.commit.message.split('\n')[0]}`)
              .join('\n');
            
            const releaseBody = `## WhoRang AI Doorbell ${tag}

            **Auto-generated release after successful CI/CD pipeline.**

            ### üè† Home Assistant Add-on
            - ‚úÖ Home Assistant 2025.6+ compatible (64-bit only)
            - ‚úÖ Raspberry Pi 4+ support (aarch64)
            - ‚úÖ Intel/AMD 64-bit support
            - ‚úÖ Multi-provider AI analysis
            - ‚úÖ Advanced face recognition
            - ‚úÖ Real-time WebSocket updates

            ### üê≥ Container Images
            - \`ghcr.io/beast12/whorang-addon:${tag}\`
            - \`ghcr.io/beast12/whorang-addon:latest\`

            ### üìã Recent Changes
            ${changelog}

            ### üöÄ Installation
            Add this repository to your Home Assistant add-on store:
            \`https://github.com/Beast12/whorang-addon\`

            ### üìö Documentation
            - [Installation Guide](docs/INSTALLATION.md)
            - [Configuration](docs/CONFIGURATION.md)
            - [API Reference](docs/API_REFERENCE.md)
            `;

            await github.rest.repos.createRelease({
              owner,
              repo,
              tag_name: tag,
              name: `WhoRang AI Doorbell ${tag}`,
              body: releaseBody,
              draft: false,
              prerelease: false
            });
            
            console.log(`‚úÖ Created GitHub release: ${tag}`);
